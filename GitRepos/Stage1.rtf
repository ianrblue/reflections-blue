{\rtf1\ansi\ansicpg1252\cocoartf1187\cocoasubrtf340
\cocoascreenfonts1{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red35\green110\blue37;\red118\green15\blue80;\red0\green0\blue255;
\red46\green13\blue110;\red137\green19\blue21;\red191\green191\blue191;}
\margl1440\margr1440\margb1800\margt1800\vieww13860\viewh12180\viewkind0
\deftab720
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\f0\fs24 \cf0 \expnd0\expndtw0\kerning0
	\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs36 \cf0 \expnd0\expndtw0\kerning0
Mobile Makers Academy \
Preparation And Supplemental Materials\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\'a9Mobile Makers Academy 2013\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul \ulc0 Stage 1 - Suggested Time: 15 hours
\fs36 \expnd0\expndtw0\kerning0
\ulnone 	\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs32 \cf0 \expnd0\expndtw0\kerning0
Video: Objective-C Essential Training (lynda.com)
\fs28 \expnd0\expndtw0\kerning0
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul Section 1 - Getting Started\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
1.1 Installing the tools 4m 42s  	\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt: \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Install Xcode and register as an Apple Developer.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Boom. Done.\
\
	\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
1.2 Creating your first application 11m 28s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Create your first application using the same steps Simon describes in the video. Familiarize yourself with the Xcode environment, specifically notice how it can be manipulated to display different helper tools and how it will attempt to fill in your code as you type it.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Alrighty.\
	\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
1.3 Updates to this course 3m 31s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Why do you think it's important to be aware of the idiosyncracies with older versions of Objective-C and to keep up with new features as they are added?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
	It's important to keep up to date with new versions of Objective-C so that we are comfortable when we come across new things in tools such as x-code.  It also is important when learning from a website or tutorial why something may look different than it did before.  Likewise, it's important to know some of the key differences with older versions so that we understand what we're looking at when are updating an older app or learning from an older resource.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul Section 2 - Objective-C Basics\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
2.1 The Objective-C language 4m 11s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
How did Objective-C become the language to learn if you want to make apps for the iPhone and iPad?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
Objective-C is the core of OSX which was released in 2001.  The iPhone and iPad utilize OSX and so it uses Objective-C as well.  OSX took much of it's features from NeXT, an Objective-C based OS that was purchased by Apple.  This long history has molded Objective-C into what it is today.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
2.2 The structure of an Objective-C program 6m 15s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Create a new project. Go to the menu option Xcode/Preferences/Text_Editing and make sure "Line Numbers" is checked in the section marked "Show." Then add comments describing the purpose of each auto-generated line in the main.m file. For example on Line 17 I would write: "  NSLog(@"Hello, World!"); //instructs the console to output the phrase "Hello, World!")"  \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
2.3 Compiling and running your code 8m 37s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Why might you build in one version of iOS but deploy in an older version?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
You'll likely always build using the latest version, but you may want to deploy an older version depending on your user base.  By deploying in an older version, you're simply allowing the finished app to run on on older version of OSX.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul Section 3 - Program Flow\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
3.1 Logging messages to the command line 6m 7s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Following the example in the video, write a program that calculates and outputs to the console the number of seconds in ten years. Copy and paste your code here.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:
\f1\i0 \kerning1\expnd0\expndtw0 \CocoaLigature0 \
\pard\tx866\pardeftab866\pardirnatural
\cf0 \
    \cf2 // insert code here...\cf0 \
    \cf3 int\cf0  seconds = \cf4 60\cf0 ;\
    \cf3 int\cf0  minutes = \cf4 60\cf0 ;\
    \cf3 int\cf0  hours = \cf4 24\cf0 ;\
    \cf3 int\cf0  days = \cf4 365\cf0 ;\
\
    \cf3 int\cf0  secondsInAYear = seconds * minutes * hours * days;\
    \
    \cf5 NSLog\cf0 (\cf6 @"There are %i seconds in 10 years."\cf0 ,secondsInAYear * \cf4 10\cf0 );\

\fs36     
\f0\fs24 \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural
\cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
3.2 Writing conditional code 7m 1s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Using Objective-C, create an integer variable called "H" that represents the days of the week. Write an if statement that checks whether "day" is a weekend day. If the day is a weekend day then have your program print a message saying "Have a nice weekend!" and if it's not, print a message saying "I hope you're having a good week!"\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
3.3 The switch statement 5m 58s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Create a variable called "hurricaneCategory" and a switch statement that prints out a message describing a hurricane's category from 1-5. \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\
\pard\tx866\pardeftab866\pardirnatural

\f1\i0\fs36 \cf0 \kerning1\expnd0\expndtw0 \CocoaLigature0  
\fs24    \cf3 int\cf0  hurricaneCategory = \cf4 5\cf0 ;\
    \
    \cf3 switch\cf0  (hurricaneCategory) \{\
        \cf3 case\cf0  \cf4 1\cf0 :\
            \cf5 NSLog\cf0 (\cf6 @"It's a category 1 hurricane!"\cf0 );\
            \cf3 break\cf0 ;\
        \cf3 case\cf0  \cf4 2\cf0 :\
            \cf5 NSLog\cf0 (\cf6 @"It's a category 2 hurricane!"\cf0 );\
            \cf3 break\cf0 ;\
        \cf3 case\cf0  \cf4 3\cf0 :\
            \cf5 NSLog\cf0 (\cf6 @"It's a category 3 hurricane!"\cf0 );\
            \cf3 break\cf0 ;\
        \cf3 case\cf0  \cf4 4\cf0 :\
            \cf5 NSLog\cf0 (\cf6 @"It's a category 4 hurricane!"\cf0 );\
            \cf3 break\cf0 ;\
        \cf3 case\cf0  \cf4 5\cf0 :\
            \cf5 NSLog\cf0 (\cf6 @"It's a category 5 hurricane!"\cf0 );\
            \cf3 break\cf0 ;\
    \}
\f0\i \expnd0\expndtw0\kerning0
\CocoaLigature1 \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
3.4 Code snippets 5m 15s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Grab a code snippet, indent it to match the indent of your project, then add comments to it, then select the entire snippet you just modified and save it as your own code snippet. Time yourself and record how many seconds it takes you to do all this.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Took just over a minute\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
3.5 Operators and expressions 11m 8s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
List the 6 types of operators described in this video. Provide their name, a description of their meaning, and the syntax you would use to execute them. What code snippet does the ternary operator replace?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Arithmetic operators: \
+ addition\
- subtraction\
* multiplication\
/ division\
\
Assignment operators:\
=  sets a value to variable\
+=\
-=\
*=\
/=\
\
Comparison Operators:\
== equality\
!= inequality\
> greater than\
< less than\
>= greater than or equal to\
<= less than or equal to\
\
Logical and operator:\
&&\
\
Logical or operator:\
||\
\
Increment  operator:\
a = a + 1;\
a += 1;\
a++;\
++a;\
\
Decrement operator:\
a = a - 1;\
a -= 1;\
a--;\
--a;\
\
Modulus operator\
% calculates remander\
\
Ternary operator:\
condition ? true : false\
\
The ternary operator acts like a mini if / else statement\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
3.6 Loops 8m 53s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
CHALLENGE: Think of a scenario while using a mobile app that might require you to use a "continue" statement in the middle of a loop.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
If we were playing a mobile game with many levels, we may want to see a list of levels that we have not played yet.  This could be used to filter out the levels that have been played.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
3.7 Functions 10m 16s \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What is a function? What is a function prototype? What are the purposes of each? What are the rules for when and how you can call a function?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
A function is a chunk of related code that is given a name.\
\
A function prototype has a description that the function exists at the top of the page (example: void myFunction(); ) and then defines the function separately at the bottom of the page.\
\
You can call a function anytime in the body of the code by simply writing the function's name followed by an open and closed parenthesis and semicolon.  Example:  myFunction( ) ;\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul Section 4 - Variables\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
4.1 Data types 7m 6s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What are the primitive data types in Objective-C? Why did Apple add a set of classes to handle other data types?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
Primitive data types in Objective-C:\
int\
float\
double\
char\
BOOL\
\
Apple added a set of classes to handle other data types to make coding slightly easier for developers.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
4.2 Working with numbers 9m 33s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Make a table of Objective-C primitive data types. Add numeric data types and their properties to this table. \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrt\brdrnil \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clbrdrt\brdrs\brdrw20\brdrcf7 \clbrdrl\brdrs\brdrw20\brdrcf7 \clbrdrb\brdrs\brdrw20\brdrcf7 \clbrdrr\brdrs\brdrw20\brdrcf7 \clpadl100 \clpadr100 \gaph\cellx4320
\clvertalc \clshdrawnil \clbrdrt\brdrs\brdrw20\brdrcf7 \clbrdrl\brdrs\brdrw20\brdrcf7 \clbrdrb\brdrs\brdrw20\brdrcf7 \clbrdrr\brdrs\brdrw20\brdrcf7 \clpadl100 \clpadr100 \gaph\cellx8640
\pard\intbl\itap1\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural
\cf0 int\cell 
\pard\intbl\itap1\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural
\cf0 integer, example: 7\
no decimals \
4 bytes/32 bits\
%i place holder\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clheight265 \clbrdrt\brdrs\brdrw20\brdrcf7 \clbrdrl\brdrs\brdrw20\brdrcf7 \clbrdrb\brdrs\brdrw20\brdrcf7 \clbrdrr\brdrs\brdrw20\brdrcf7 \clpadl100 \clpadr100 \gaph\cellx4320
\clvertalc \clshdrawnil \clheight265 \clbrdrt\brdrs\brdrw20\brdrcf7 \clbrdrl\brdrs\brdrw20\brdrcf7 \clbrdrb\brdrs\brdrw20\brdrcf7 \clbrdrr\brdrs\brdrw20\brdrcf7 \clpadl100 \clpadr100 \gaph\cellx8640
\pard\intbl\itap1\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural
\cf0 float\cell 
\pard\intbl\itap1\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural
\cf0 must have letter "f" following the value, example: 7.2f\
4 bytes/4 bits\
%f place holder for decimal representation\
%e placeholder for exponential representation\
%g computer decides which to show\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clbrdrt\brdrs\brdrw20\brdrcf7 \clbrdrl\brdrs\brdrw20\brdrcf7 \clbrdrb\brdrs\brdrw20\brdrcf7 \clbrdrr\brdrs\brdrw20\brdrcf7 \clpadl100 \clpadr100 \gaph\cellx4320
\clvertalc \clshdrawnil \clbrdrt\brdrs\brdrw20\brdrcf7 \clbrdrl\brdrs\brdrw20\brdrcf7 \clbrdrb\brdrs\brdrw20\brdrcf7 \clbrdrr\brdrs\brdrw20\brdrcf7 \clpadl100 \clpadr100 \gaph\cellx8640
\pard\intbl\itap1\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural
\cf0 double\cell 
\pard\intbl\itap1\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural
\cf0 8 bytes/64 bits\
no letter "f" following the value, example: 7.2\
\pard\intbl\itap1\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural
\cf0 \expnd0\expndtw0\kerning0
%f place holder for decimal representation\
%e placeholder for exponential representation\
%g computer decides which to show\expnd0\expndtw0\kerning0
\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clbrdrt\brdrs\brdrw20\brdrcf7 \clbrdrl\brdrs\brdrw20\brdrcf7 \clbrdrb\brdrs\brdrw20\brdrcf7 \clbrdrr\brdrs\brdrw20\brdrcf7 \clpadl100 \clpadr100 \gaph\cellx4320
\clvertalc \clshdrawnil \clbrdrt\brdrs\brdrw20\brdrcf7 \clbrdrl\brdrs\brdrw20\brdrcf7 \clbrdrb\brdrs\brdrw20\brdrcf7 \clbrdrr\brdrs\brdrw20\brdrcf7 \clpadl100 \clpadr100 \gaph\cellx8640
\pard\intbl\itap1\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural
\cf0 char\cell 
\pard\intbl\itap1\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural
\cf0 represents a signal character, example: 'b'\
1 byte/8 bits\
%c place holder\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrr\brdrnil 
\clvertalc \clshdrawnil \clbrdrt\brdrs\brdrw20\brdrcf7 \clbrdrl\brdrs\brdrw20\brdrcf7 \clbrdrb\brdrs\brdrw20\brdrcf7 \clbrdrr\brdrs\brdrw20\brdrcf7 \clpadl100 \clpadr100 \gaph\cellx4320
\clvertalc \clshdrawnil \clbrdrt\brdrs\brdrw20\brdrcf7 \clbrdrl\brdrs\brdrw20\brdrcf7 \clbrdrb\brdrs\brdrw20\brdrcf7 \clbrdrr\brdrs\brdrw20\brdrcf7 \clpadl100 \clpadr100 \gaph\cellx8640
\pard\intbl\itap1\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural
\cf0 BOOL\cell 
\pard\intbl\itap1\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural
\cf0 store something with a boolian value (true/false)\
BOOL isCompleted = YES;\
BOOL isCompleted = NO;\
%i place holder, YES == 1, NO == 0\
\cell \row

\itap1\trowd \taflags1 \trgaph108\trleft-108 \trbrdrl\brdrnil \trbrdrt\brdrnil \trbrdrr\brdrnil 
\clvmgf \clmgf \clvertalc \clshdrawnil \clbrdrt\brdrs\brdrw20\brdrcf7 \clbrdrl\brdrs\brdrw20\brdrcf7 \clbrdrb\brdrs\brdrw20\brdrcf7 \clbrdrr\brdrs\brdrw20\brdrcf7 \clpadl100 \clpadr100 \gaph\cellx4320
\clvmgf \clmrg \clvertalc \clshdrawnil \clbrdrt\brdrs\brdrw20\brdrcf7 \clbrdrl\brdrs\brdrw20\brdrcf7 \clbrdrb\brdrs\brdrw20\brdrcf7 \clbrdrr\brdrs\brdrw20\brdrcf7 \clpadl100 \clpadr100 \gaph\cellx8640
\pard\intbl\itap1\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural
\cf0 \cell 
\pard\intbl\itap1\cell \lastrow\row
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural
\cf0 \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
4.3 Working with characters 4m 39s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Add char and BOOL (the character data types) to your table created above.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
see above...\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
4.4 Variable scope 8m 6s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Describe in your own words what the scope of a variable is in Objective-C\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
A variable's scope refers to the extent of a variables existence.  The scope of a variable in Objective-C only exists within it's block, or curry braces.  \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
4.5 Enumerations 3m 35s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What does "enum" allow you to do?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
 Enumerated "enum" allows you to restrict the range of values in certain classes.  It also allows you to write values out in words rather than assigning a numeral.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
4.6 Using typedef 2m 17s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
When would you define your own data type versus use an enum?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Defining your own data shortens the amount of code and makes it easier to work with. \
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
4.7 Preprocessor directives 5m 56s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Describe the three common preprocessor directives, #import, #define, and #if DEBUG. Come up with one example where you would use each.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
#import - finds file, copies contents, and pastes it in file.  This allows you to take code from different files and use it in your current file.\
\
#define - finds a value and replaces it within your code before compiling.  This allows you to globally define fixed variables that will be used throughout your code.  If I needed to use Pi throughout my code, I could simply define the value of Pi once rather than every time I needed to write it.\
\
#if DEBUG - Runs a section of code only when in debug mode.  Used for diagnostic messages when running a program in debug mode.  This allows you to keep your diagnostic messages in the code, but they will be ignored when the code is functioning on a normal system.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
4.8 Working with strings 7m 52s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Define the same string using both NSString and C-style string syntax. Describe the purpose behind each part of your definition.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
NSString *message = @"Hello";\
\
NSString refers to the type.  NSString is found in our foundations framework, as strings are not built into Objective-C.  @"Hello" refers to the value.  We use an @ symbol to tell the program that this is a NSString value.  *message is simply the name of the variable.  The * is called the pointer and it points to an object. \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul Section 5 - Classes\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
5.1 Introduction to object orientation 7m 36s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Create an encapsulated (including generalized attributes and behavior) description of a "mobileMakersParticipant" class. Instantiate a single object representing yourself as a member of this class.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
Class: moblileMakerParticipant\
Attributes: name\
Behavior: 
\i \expnd0\expndtw0\kerning0
\

\i0 \expnd0\expndtw0\kerning0
\
mobileMakersParticipant *participant =@"Ian Blue";\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
5.2 Using objects and pointers 6m 38s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What is the pointer's role in instantiating an object from a class? How is a pointer different than a primitive?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
A pointer is required to reference an object.  It simply points to an area of memory where an object is contained.  It does this because these objects can be large, and sometimes their size changes.  Copying the object to a new area of memory when we want to use it, we simply point to where it is already located.  This is different than a primitive.  Primitive's used a very small and fixed amount of memory.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
5.3 Messages and methods 6m 44s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What is the main difference between Objective-C's messages and method calls in other languages? How can this difference be seen as an advantage while programming?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Methods in Ojective-C use square brackets.  We can also include multiple arguments with these methods.  This can begin to look like a lot of text, but it's actually easier to read than methods in other languages.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
5.4 Using existing classes in the foundation framework 8m 40s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What's the difference between a class method and an instance method? EXPLORE: Try typing "NSD\'85" into your code window. Use the autofill feature and select a single class name that starts with those three letters. Once the name has been auto-completed, use the handy shortcut (Option + click) and investigate the class whose name just got printed to the screen. Examine the task list for this class. Do this a few more times until you're familiar with the process, or until you've exhausted your curiosity, whichever comes last.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Class methods are designed to work on the entire class while instance methods are designed to only work on the instance.  Class methods have tasks that begin with a + symbol, instance methods have tasks that begin with a - symbol.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul Section 6 - Memory Management\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
6.1 What's new with memory management? 1m 45s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
(None)\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
6.2 Memory management in Objective-C 6m 58s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What is the relationship between a pointer to an object, a block of memory, and the owning and releasing process. Can you come up with an analogy for this relationship?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
A pointer points to where an object is stored in a block of memory.  That object will remain in memory until it is toledo to be released.  If you own the object, you must release it.  If you don't own the object, you cannot release it.\
\
If I'm at the zoo and buy some food for the ducks, I must throw the food at the ducks.  I can't take it home with me because this would be a memory leak.  Someone else can't throw my food to the ducks, because it's not theirs to release.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
6.3 Object creation 7m 31s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What does the new method do when used to create an object instance of a class? Why do we avoid using this method? How long is an object's lifetime?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
The new method creates a new object through allocation and initialization.  We avoid using this method and write the allocation and initialization of an object separately because it gives us more control.  We may want to use serval init methods.\
\
An object's lifetime depends on when you command the program to release that object.  If you don't release it, it will last for the remainder of the programs life.  We want to release objects when it is appropriate to avoid memory leaks.  To many memory leaks will cause a program to crash.  On the flip side, if we release an object and attempt to call it later on, our program will also crash.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
6.4 Using autorelease pools 5m 14s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
How does the autorelease pool work? How and when can you use it deliberately? \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
An autorelease pool is a list of objects that need to be released "later".  We can release this list of objects by simply writing [pool drain].  It will also be released automatically at the end of an event loop in iOS.  We should only use the autorelease pool when we really need it.  This may be when an object maybe called upon soon after release.  This buys us a bit of time and insures that it will be released in the future.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
6.5 Apple autoreleased objects 3m 39s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What does NARC stand for? Why is it important to remember this?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
NARC stands for New, Alloc, Retain, Copy.  It's a way to remember what objects we need to release.  If we don't own an object (use the words new, alloc, retain, or copy) we must not release the object.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
6.6 Introduction to Automatic Reference Counting (ARC) 4m 43s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What does ARC save us from having to do? How does it keep us from having to make this extra effort?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
ARC -  Automatic Reference Counting\
\
ARC saves us from having to keep track of all the paths of each object.  We don't write retain calls or release calls.  The compiler takes care of this.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
6.7 What ARC manages 2m 42s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What are the differences between ARC and garbage collection? What makes these differences advantageous?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
ARC is not garbage collection.  ARC is being done at compiled time, not at runtime.  This makes it more predictable, and it doesn't get bogged down buy a garbage collector running in the background.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
6.8 The rules of ARC 4m 20s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Why can you not release or dealloc memory when working with ARC?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
These instructions are automatically added when the code is compiled.  Xcode, won't allow you to write this code if you have ARC enabled.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul Section 7 - Custom Classes\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
7.1 Creating your own classes 14m 1s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What are the two different sections used to create a class? What do they hold and what files are they placed in? CHALLENGE: Create a Tweet class for a twitter style app.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
 \
Interface and implementation are used to create a class.  The interface is stored in the .h file.  It simply says what is available, but doesn't tell you how to do it.  Describes what methods and properties are available.\
\
The implementation in stored in the .m file.  It is the real code that is stored for a class.  It's where the real work is done.\
\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
7.2 Defining methods 8m 36s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
CHALLENGE: Define what should get passed in and what should get returned by each of your methods in your Tweet class above.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
7.3 Defining properties 7m 21s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
How did Objective-C programmers handle instance variables before 2012? How are they handled now? What got easier and what got obscured? \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Before 2012, you would define an instance variable inside your header file.  You can still do this, but now the best practice is to not use instance variables and simply define everything within the property.  It's easier, because there is a lot less to type and the compiler takes care of the code.  The obscure part is when we want to have an instance variable that is not needed globally.  we can limit it's scope by defining it in the .m file.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
7.4 Defining initializers 12m 30s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What are initializers and why do we need to use them? Describe a situations when you can rely on the standard init method and when you have to create your own custom initializer. \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
Initializers create objects.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
7.5 Using dealloc 5m 33s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Why can we have a dealloc method in a class when using ARC, but we can't call dealloc manually oursevles when using ARC?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
You can write a dealloc method and it will be called at the right time using ARC, but you can't explicitly call it yourself.  It will be called automatically by the compiler when using ARC.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul Section 8 - Collections\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
8.1 Working with C-style arrays 7m 12s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What are the three constraints when using C-style arrays? Create a C-style array that holds the days of the week.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
- No bounds checking\
- fixed size\
- can't mix types\
\
NSString *daysOfTheWeek [7]  \{@"Sunday" ,@"Monday" ,@"Tuesday" ,@"Wednesday" ,@"Thursday" ,@"Friday" ,@"Saturday" \};\
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
8.2 Working with Objective-C array objects 8m 0s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What is the difference between a mutable and an immutable array? CHALLENGE: Create an immutable array containing the days of the week. Create a mutable array that contains the days of the week that you will be at Mobile Makers. Add the days of the week from the immutable array to the mutable array.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
You can not add or change objects to an immutable array, it is a fixed size. (example: NSArray)  A mutable array is more flexible.  It lets you add add or remove objects later on in your code.  (example: NSMutableArray)\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
8.3 Using dictionaries 5m 55s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Create a dictionary that lists five or more events in your life and the accompanying year (or date if you want to get fancy) of the event.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
A dictionary is made up of a word (acts as a key) and description.\
\
NSDictionary *events =\
  [NSDictionary dictionaryWithObjectsAndKeys:\
	@"Was born" ,@"1988",\
	@"Learn to ski" ,@"1990",\
	@"Graduate high school" ,@"2006",\
	@"Graduate college" ,@"2010",\
	@"Attend Mobile Makers Academy" ,@"2013",\
	nil] ;\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
8.4 Fast enumeration 3m 27s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Use fast enumeration to log the timeline of the life events you described above to the console.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
for (NSString *years in events) \{\
	NSLog(@"  %@ is the year I %@" , years, [events objectForKeys:years]);\
\}\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul Section 9 - File Management\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
9.1 Introduction to file management in Objective-C 6m 44s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What can you do with files using the methods you are aware of that are available in Objective C's Foundation class.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Check if a file exists at a certain location\
Checks the attributes of a certain file\
Copy a file from one location to another\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
9.2 Working with paths and URLs 7m 17s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What are the three parts of a URL? What are the advantages to using NSURL? \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
URL consists of a scheme, domain, and path.\
\
NSURL objects are faster than string paths, can trap errors, and are used by more classes.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
9.3 Reading and writing strings 4m 38s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What would be a reason you would want to write a string to disk instead of just keeping it memory?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
It allows us to make changes to files currently written to disk or save a new file for later use/reference.  Example: an autosave feature during a game.\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
9.4 Archiving objects 12m 41s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
Why would you want to archive an object instead of writing the data to disk using the techniques discussed previously?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
An archived object allows that object to be decoded at a later time.  Basically we can archive an object and then use that object later.  Simply writing a file to the disk as text would not work this way.  An archived file contains all sorts of detailed information about the object.\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs32 \cf0 \expnd0\expndtw0\kerning0
\ul Section 10 - More Complex Classes\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\fs24 \cf0 \expnd0\expndtw0\kerning0
\ulnone \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
10.1 Inheritance and NSObject 8m 13s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
How can you determine what methods you're inheriting from a super class? How do you overide a method inherited from a super class? \
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
10.2 Extending classes with categories 6m 31s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What is the difference between a category and an inheritance? What are the limitations of using a category?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
10.3 Defining protocols 5m 14s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
How are protocols useful?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b\fs28 \cf0 \expnd0\expndtw0\kerning0
10.4 Dynamic typing 11m 33s  \
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\b0\fs24 \cf0 \expnd0\expndtw0\kerning0
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Prompt:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
What are the advantages and disadvantages to dynamic typing?\
\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i \cf0 \expnd0\expndtw0\kerning0
Response:\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardeftab720\pardirnatural

\i0 \cf0 \expnd0\expndtw0\kerning0
\
\
\
}